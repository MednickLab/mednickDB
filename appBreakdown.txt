We have:
Studies, that feature subjects performing controlled tasks, for multiple visits.
Graduates/researchers set up tasks, define data architecture.
Research assistants carry out tasks, and collect Data.



What problems do we have:


Point:
Application to house all lab files. Files are systematically stored according to their metadata, to allow for easy indexing. With researchers requiring access to the data within the files, scripts housed on server read/parse data and store it in DB. Files and data may be accessed through endpoints using the included angular client, or through any method allowing HTTP requests (i.e Python, MATLAB).

Endpoints allow for file uploads, querries, updates, deletions, and more. Users may also use endpoints to insert data without files, but data insertion is primarily done my python microservices. All file, data manipulations must be done through endpoints, to allow API to log all activity and avoid corruption.

Admins will be able to insert files directly into filesystem (i.e using FTP), outside of the API. A microservice periodically scans the filestem for these new files and automatically logs them in API.

Files are classified as two main types: Survey, Task.

A single survey file includes demographic, screening data for multiple study participants. 
Each task file contains recorded data for a single participant.

Participant Survey Data and Participant Task Data will have a 1-to-1 relationship. 


FileUpload
{
    "filename": "filename1",
    "studyID": "study1",
    "visitID": "visit1",
    "sessionID": "session1",
    "docInfo": {
        "type": "Task || Survey",
        "title": "SleepScoring || CognitiveTestX",
        "subjectID": ["id_1", "id_2"]
    },
    "complete": "1",
    "path": "study1/visit1/session1/doctype1/filename",
    "uploadedBy": "student@ucr.edu",
    "dateUploaded": 2456513464,
    "expired": "0"
}

SurveyData
{
    "filename": "filename1",
    "studyID": "study1",
    "visitID": "visit1",
    "sessionID": "session1",
    "subjectID": "subject1",
    "surveyType": "screening || diary || questionaire",
    "dateRecorded":"",
    "survey":{
        "key1":"value1",
        "key2":"value2"
    },
    "sourceID": 424574684,
    "dateUploaded": 2456513464,
    "expired": "0"
}

TaskData
{
    "filename": "filename1",
    "studyID": "study1",
    "visitID": "visit1",
    "sessionID": "session1",
    "doctypeID": "doctype1",

    "sourceID": 424574684,
    "dateUploaded": 2456513464,
    "expired": "0",

    "taskInfo":{
        "recordStartTime":"",
        "data":"",
        "epochStages":[],
        "recordStart":"",
        "epochTimes":[]
    }
}
























LOG-IT WOULD INTEGRATE FUCKING PERFECT WITH THIS